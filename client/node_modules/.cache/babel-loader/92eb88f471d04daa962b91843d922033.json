{"ast":null,"code":"var _jsxFileName = \"/Users/harshitha/Desktop/alltech/client/src/Tabel.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Button, Form, Input, Popconfirm, Table } from 'antd';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableContext = /*#__PURE__*/React.createContext(null);\n\nconst EditableRow = _ref => {\n  _s();\n\n  let {\n    index,\n    ...props\n  } = _ref;\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(EditableContext.Provider, {\n      value: form,\n      children: /*#__PURE__*/_jsxDEV(\"tr\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableRow, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = EditableRow;\n\nconst EditableCell = _ref2 => {\n  _s2();\n\n  let {\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    ...restProps\n  } = _ref2;\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title} is required.`\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        ref: inputRef,\n        onPressEnter: save,\n        onBlur: save\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: childNode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(EditableCell, \"IMw7TsWhFd8T/FybyizRtPpww8A=\");\n\n_c2 = EditableCell;\n\nconst Tabel = () => {\n  _s3();\n\n  const [dataSource, setDataSource] = useState([{\n    key: '0',\n    name: 'Edward King 0',\n    age: '32',\n    address: 'London, Park Lane no. 0'\n  }, {\n    key: '1',\n    name: 'Edward King 1',\n    age: '32',\n    address: 'London, Park Lane no. 1'\n  }]);\n  const [count, setCount] = useState(2);\n\n  const handleDelete = key => {\n    const newData = dataSource.filter(item => item.key !== key);\n    setDataSource(newData);\n  };\n\n  const defaultColumns = [{\n    title: 'name',\n    dataIndex: 'name',\n    width: '30%',\n    editable: true\n  }, {\n    title: 'age',\n    dataIndex: 'age'\n  }, {\n    title: 'address',\n    dataIndex: 'address'\n  }, {\n    title: 'operation',\n    dataIndex: 'operation',\n    render: (_, record) => dataSource.length >= 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => handleDelete(record.key),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this) : null\n  }];\n\n  const handleAdd = () => {\n    const newData = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: '32',\n      address: `London, Park Lane no. ${count}`\n    };\n    setDataSource([...dataSource, newData]);\n    setCount(count + 1);\n  };\n\n  const handleSave = row => {\n    const newData = [...dataSource];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item,\n      ...row\n    });\n    setDataSource(newData);\n  };\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell\n    }\n  };\n  const columns = defaultColumns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAdd,\n      type: \"primary\",\n      style: {\n        marginBottom: 16\n      },\n      children: \"Add a row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(Tabel, \"l7h9brGku/O+0fmz2Xm0F9o46Wc=\");\n\n_c3 = Tabel;\nexport default Tabel;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditableRow\");\n$RefreshReg$(_c2, \"EditableCell\");\n$RefreshReg$(_c3, \"Tabel\");","map":{"version":3,"names":["Button","Form","Input","Popconfirm","Table","React","useContext","useEffect","useRef","useState","EditableContext","createContext","EditableRow","index","props","form","useForm","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","inputRef","current","focus","toggleEdit","setFieldsValue","save","values","validateFields","errInfo","console","log","childNode","margin","required","message","paddingRight","Tabel","dataSource","setDataSource","key","name","age","address","count","setCount","handleDelete","newData","filter","item","defaultColumns","width","render","_","length","handleAdd","row","findIndex","splice","components","body","cell","columns","map","col","onCell","marginBottom"],"sources":["/Users/harshitha/Desktop/alltech/client/src/Tabel.js"],"sourcesContent":["import { Button, Form, Input, Popconfirm, Table } from 'antd';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nconst EditableContext = React.createContext(null);\n\nconst EditableRow = ({ index, ...props }) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const inputRef = useRef(null);\n  const form = useContext(EditableContext);\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex],\n    });\n  };\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record, ...values });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{\n          margin: 0,\n        }}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{\n          paddingRight: 24,\n        }}\n        onClick={toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  return <td {...restProps}>{childNode}</td>;\n};\n\nconst Tabel = () => {\n  const [dataSource, setDataSource] = useState([\n    {\n      key: '0',\n      name: 'Edward King 0',\n      age: '32',\n      address: 'London, Park Lane no. 0',\n    },\n    {\n      key: '1',\n      name: 'Edward King 1',\n      age: '32',\n      address: 'London, Park Lane no. 1',\n    },\n  ]);\n  const [count, setCount] = useState(2);\n\n  const handleDelete = (key) => {\n    const newData = dataSource.filter((item) => item.key !== key);\n    setDataSource(newData);\n  };\n\n  const defaultColumns = [\n    {\n      title: 'name',\n      dataIndex: 'name',\n      width: '30%',\n      editable: true,\n    },\n    {\n      title: 'age',\n      dataIndex: 'age',\n    },\n    {\n      title: 'address',\n      dataIndex: 'address',\n    },\n    {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (_, record) =>\n        dataSource.length >= 1 ? (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null,\n    },\n  ];\n\n  const handleAdd = () => {\n    const newData = {\n      key: count,\n      name: `Edward King ${count}`,\n      age: '32',\n      address: `London, Park Lane no. ${count}`,\n    };\n    setDataSource([...dataSource, newData]);\n    setCount(count + 1);\n  };\n\n  const handleSave = (row) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    setDataSource(newData);\n  };\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  const columns = defaultColumns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave,\n      }),\n    };\n  });\n  return (\n    <div>\n      <Button\n        onClick={handleAdd}\n        type=\"primary\"\n        style={{\n          marginBottom: 16,\n        }}\n      >\n        Add a row\n      </Button>\n      <Table\n        components={components}\n        rowClassName={() => 'editable-row'}\n        bordered\n        dataSource={dataSource}\n        columns={columns}\n      />\n    </div>\n  );\n};\n\nexport default Tabel;"],"mappings":"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"},"metadata":{},"sourceType":"module"}